_current_progress_remaining:
    value: 1
_custom_logger:
    value: "False"
_episode_num:
    value: 0
_episode_storage:
    value: None
_last_episode_starts:
    value: '[ True]'
_last_obs:
    value: '[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]'
_last_original_obs:
    value: None
_logger:
    value: <stable_baselines3.common.logger.Logger object at 0x30f2b6250>
_n_calls:
    value: 0
_n_updates:
    value: 0
_num_timesteps_at_start:
    value: 0
_stats_window_size:
    value: 100
_total_timesteps:
    value: 1000000
_vec_normalize_env:
    value: None
_wandb:
    value:
        cli_version: 0.18.7
        m: []
        python_version: 3.9.18
        t:
            "1":
                - 2
                - 1
                - 3
                - 55
            "2":
                - 2
                - 1
                - 3
                - 55
            "3":
                - 1
                - 2
                - 16
                - 22
                - 23
                - 34
                - 35
                - 55
            "4": 3.9.18
            "5": 0.18.7
            "8":
                - 1
                - 5
            "12": 0.18.7
            "13": darwin-arm64
action_noise:
    value: None
action_space:
    value: Discrete(11)
algo:
    value: DQN
batch_norm_stats:
    value: '[]'
batch_norm_stats_target:
    value: '[]'
batch_size:
    value: 64
buffer_size:
    value: 50000
device:
    value: cpu
env:
    value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x30e5cc8b0>
ep_info_buffer:
    value: deque([], maxlen=100)
ep_success_buffer:
    value: deque([], maxlen=100)
exploration_final_eps:
    value: 0.05
exploration_fraction:
    value: 0.1
exploration_initial_eps:
    value: 1
exploration_rate:
    value: 0
exploration_schedule:
    value: <function get_linear_fn.<locals>.func at 0x30f298430>
gamma:
    value: 0.99
gradient_steps:
    value: 1
learning_rate:
    value: 0.0005
learning_starts:
    value: 1000
lr_schedule:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x30f219940>
max_grad_norm:
    value: 10
n_envs:
    value: 1
n_steps:
    value: 256
num_timesteps:
    value: 0
observation_space:
    value: Box(0.0, 1.0, (20,), float32)
optimize_memory_usage:
    value: "False"
policy:
    value: |-
        DQNPolicy(
          (q_net): QNetwork(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (q_net): Sequential(
              (0): Linear(in_features=20, out_features=64, bias=True)
              (1): ReLU()
              (2): Linear(in_features=64, out_features=64, bias=True)
              (3): ReLU()
              (4): Linear(in_features=64, out_features=11, bias=True)
            )
          )
          (q_net_target): QNetwork(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (q_net): Sequential(
              (0): Linear(in_features=20, out_features=64, bias=True)
              (1): ReLU()
              (2): Linear(in_features=64, out_features=64, bias=True)
              (3): ReLU()
              (4): Linear(in_features=64, out_features=11, bias=True)
            )
          )
        )
policy_class:
    value: <class 'stable_baselines3.dqn.policies.DQNPolicy'>
policy_kwargs:
    value: '{}'
q_net:
    value: |-
        QNetwork(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (q_net): Sequential(
            (0): Linear(in_features=20, out_features=64, bias=True)
            (1): ReLU()
            (2): Linear(in_features=64, out_features=64, bias=True)
            (3): ReLU()
            (4): Linear(in_features=64, out_features=11, bias=True)
          )
        )
q_net_target:
    value: |-
        QNetwork(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (q_net): Sequential(
            (0): Linear(in_features=20, out_features=64, bias=True)
            (1): ReLU()
            (2): Linear(in_features=64, out_features=64, bias=True)
            (3): ReLU()
            (4): Linear(in_features=64, out_features=11, bias=True)
          )
        )
replay_buffer:
    value: <stable_baselines3.common.buffers.ReplayBuffer object at 0x30e5cc460>
replay_buffer_class:
    value: <class 'stable_baselines3.common.buffers.ReplayBuffer'>
replay_buffer_kwargs:
    value: '{}'
sde_sample_freq:
    value: -1
seed:
    value: 4022
start_time:
    value: 1732711365907370000
target_update_interval:
    value: 500
tau:
    value: 1
tensorboard_log:
    value: ./dqn_logs/
total_timesteps:
    value: 1000000
train_freq:
    value: 'TrainFreq(frequency=4, unit=<TrainFrequencyUnit.STEP: ''step''>)'
use_sde:
    value: "False"
use_sde_at_warmup:
    value: "False"
verbose:
    value: 1
